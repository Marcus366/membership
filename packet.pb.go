// Code generated by protoc-gen-go.
// source: packet.proto
// DO NOT EDIT!

/*
Package membership is a generated protocol buffer package.

It is generated from these files:
	packet.proto

It has these top-level messages:
	Digest
	SynPacket
	SynAckPacket
	AckPacket
	Empty
*/
package membership

import proto "github.com/golang/protobuf/proto"
import membership1 "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type Digest struct {
	Endpoint   []byte `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Generation uint32 `protobuf:"varint,2,opt,name=generation" json:"generation,omitempty"`
	Version    uint32 `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
}

func (m *Digest) Reset()         { *m = Digest{} }
func (m *Digest) String() string { return proto.CompactTextString(m) }
func (*Digest) ProtoMessage()    {}

type SynPacket struct {
	// a string stand for the cluster
	Id      string    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Digests []*Digest `protobuf:"bytes,2,rep,name=digests" json:"digests,omitempty"`
}

func (m *SynPacket) Reset()         { *m = SynPacket{} }
func (m *SynPacket) String() string { return proto.CompactTextString(m) }
func (*SynPacket) ProtoMessage()    {}

func (m *SynPacket) GetDigests() []*Digest {
	if m != nil {
		return m.Digests
	}
	return nil
}

type SynAckPacket struct {
	// a string stand for the cluster
	Id      string                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Digests *Digest                    `protobuf:"bytes,2,opt,name=digests" json:"digests,omitempty"`
	States  *membership1.EndPointState `protobuf:"bytes,3,opt,name=states" json:"states,omitempty"`
}

func (m *SynAckPacket) Reset()         { *m = SynAckPacket{} }
func (m *SynAckPacket) String() string { return proto.CompactTextString(m) }
func (*SynAckPacket) ProtoMessage()    {}

func (m *SynAckPacket) GetDigests() *Digest {
	if m != nil {
		return m.Digests
	}
	return nil
}

func (m *SynAckPacket) GetStates() *membership1.EndPointState {
	if m != nil {
		return m.States
	}
	return nil
}

type AckPacket struct {
	// a string stand for the cluster
	Id     string                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	States *membership1.EndPointState `protobuf:"bytes,3,opt,name=states" json:"states,omitempty"`
}

func (m *AckPacket) Reset()         { *m = AckPacket{} }
func (m *AckPacket) String() string { return proto.CompactTextString(m) }
func (*AckPacket) ProtoMessage()    {}

func (m *AckPacket) GetStates() *membership1.EndPointState {
	if m != nil {
		return m.States
	}
	return nil
}

type Empty struct {
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
